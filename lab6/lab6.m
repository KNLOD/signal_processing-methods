clear all
close all
%{
---------Чтение сигнала--------------------------
 %}
S=load('W6_01.txt');   % Чтение сигналов из файла
N=length(S);           % Число отсчетов в каждом сигнале
Fs=500;                % Частота дискретизации 500Гц 
T=1/Fs;                % Интервал дискретизации для "Fs"
t=[1:N].*T;


X0=200;        % Координата "x" (на экране) нижнего левого угла
Y0=200;        % Координата "y" (на экране) нижнего левого угла
W0=800;        % Ширина окна
H0=700;        % Высота окна
hFig=figure('Position',[X0,Y0,W0,H0]) %Создание окна


x1=30;         % Координата по "х" (в окне) нижнего левого угла 1-го поля
dx=50;         % Расстояние по "х" между 1-м и 2-м полями
y1=30;         % Координата "у" (в окне) нижнего левого угла 1-го поля
dy=50;         % Расстояние по "y" между 1-м и 2-м полями
w=300;         % Ширина 1-го и 2-го полей вывода графиков
h=125;         % Высота 1-го и 2-го полей вывода графикво

% Создание 1-го поля
hAxes1=axes('Units','pixels','Position',[x1,y1+3*dy+3*h,w,h])

% Создание 2-го поля
hAxes2=axes('Units','pixels','Position',[x1,y1+2*dy+2*h,w,h])
% Создание 3-го поля
hAxes3=axes('Units','pixels','Position',[x1,y1+dy+h,w,h])
% Создание 4-го поля
hAxes4=axes('Units','pixels','Position',[x1,y1,w,h])


%{
---------Постртение сигнала ЭКГ------------------
---Построение пульсоксимитрических сигналов------
 %}
ECG=S(1:N,1);          % Массив (вектор) отсчетов ЭКГ

axes(hAxes1)
plot(t,ECG)            %График ЭКГ

Puls_R=S(1:N,2);       % Массив "Красного" сигнала
Puls_IR=S(1:N,3);      % Массив "инфракрасного" сигнала

axes(hAxes4)
plot(t,Puls_R)         % График "Красного" сигнала
hold on

C=500;                 % Константна для смещения графика вниз
plot(t,Puls_IR-C)      % График "Инфрокрасного сигнала"


%{
-----Дифференцирование сигнала ЭКГ--------------
%}
ECG_Dif=zeros(N,1);    %Создание массива нулей
for i=1:2;
    ECG_Dif(i,1)=ECG(i);
end
for i=3:N;
    ECG_Dif(i,1)=ECG(i)-ECG(i-2);
end
axes(hAxes2)
plot(t, ECG_Dif)

axes(hAxes3)
abs_ECG_Dif=abs(ECG_Dif);
plot(t,abs_ECG_Dif)

axes(hAxes4)
tmax=t(N);
Limit=20;              % Значение порога 
XLimit(1)=0;           % Первая координата лини по оси "x"
XLimit(2)=tmax-T;      % Вторая координата линии по оси "x"
YLimit(1:2)=Limit;     % Координаты по оси "y"
line(XLimit, YLimit)   % Линия на уровне "Limit"
 
%{
---------Обнаружение QRS-Комплексов--------------
%}

Jmax=100;              % Ширина зоны нечувствительности
k=0;                   % Начальное значение счетчика QRS-комлпксов
j=Jmax;
for i=1:N;
	j=j+1;           % Счетчик зоны нечувствительности
	if (ECG_Dif(i)>Limit)&&(j>Jmax) %Сравнение сигнала с порогом
		k=k+1;       % Счетчик QRS-комлпксов
		QRS(k)=i;    % Позиция QRS-комплексов
		j=0;         % Сброс счетчика зоны нечувствительности
	end
end

%{
-------Расчет уровня насыщения крови кислородом--------
%}


axes(hAxes4)                        % 
YLimits=get(hAxes4,'YLim');         %
for i=1:k                           %
	XLimits(1:2)=QRS(i)*T;          %
	HLine=line(XLimits, YLimits);   %
	set(HLine, 'LineStyle', '--');
end

%{
------Расчет размаха обоих пульсоксиметрических сигналов------
%}

D1=Der(k,Puls_R,QRS)
D2=Der(k,Puls_IR,QRS)

alpha=D2/D1
SaO2=((0.872-0.16*alpha)/(0.14*alpha+0.754))*100


% Текстовый элемент с надписью "SaO2="	
hTxt1=uicontrol(hFig, 'Style', 'text', 'String', 'SaO2=',...
	'Position', [x1+dx+w,y1,100,h], 'Backgroundcolor', [1 1 1])
% Поле для вывода значения SaO2:
hEd=uicontrol(hFig, 'Style', 'edit', 'Position', [x1+dx+w,y1,100,h-20],...
	'Backgroundcolor', [1 1 1], 'HorizontalAlignment','center');
set(hEd, 'String', num2str(SaO2)+"%")   % Вывод значения "SaO2"

function [D]=Der(k,Puls,QRS)
D=0;
for i=1:(k-1)
    clear m                   % Предварительное удаление массива "m1"
    m=Puls(QRS(i):QRS(i+1));  % Один сердечный цикл   
    D=D+(max(m)-min(m));      % Сумма значений размаха
end
D=D/(k-1);           % Средный размах
end
